# stages:
#   - build
#   - helm-package
#   - deploy



# node-build:
#   stage: build
#   rules:
#     - if: $CI_COMMIT_TAG =~ /prod.*/
#   environment: "prod"
#   image:
#     name: docker:stable
#   services:
#     - name: docker:18.09-dind
#       entrypoint: ['dockerd-entrypoint.sh']
#       command: ['--insecure-registry=stgops.oginnovation.com']
#   before_script:
#     - docker login ${GITLAB_REGISTRY} -u ${GITLAB_REGISTRY_USERNAME} -p ${GITLAB_REGISTRY_PASSWORD}
#   script:
#     - pwd
#     - echo $CI_COMMIT_TAG
#     - docker build --build-arg BUILD_ENV="$BUILD_ENV" . -t ${GITLAB_REGISTRY}/mystudiopro-frontend-prod:$CI_COMMIT_TAG -t ${GITLAB_REGISTRY}/mystudiopro-frontend-prod:latest
#     - docker push ${GITLAB_REGISTRY}/mystudiopro-frontend-prod:$CI_COMMIT_TAG
#     - docker push ${GITLAB_REGISTRY}/mystudiopro-frontend-prod:latest


# helm-package:
#   stage: helm-package
#   variables:
#    PACKAGE_NAME: mystudiopro-frontend-prod
#   rules:
#    - if: $CI_COMMIT_TAG =~ /prod.*/
#   environment: "prod"
#   image:
#    name: alpine/helm:3.2.1
#    entrypoint: ['']
#   before_script:
#   - apk add wget && apk add git && apk add sed
#   - helm plugin install https://github.com/chartmuseum/helm-push
#   - helm repo add --username ${HELM_USER} --password ${HELM_ACCESS_TOKEN} ${CI_PROJECT_NAME} https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/packages/helm/stable
#   script:
#   - pwd 
#   - cd HelmCharts
#   - cp -r environments/prod.values.yaml && mv prod.values.yaml values.yaml
#   - sed -i 's/mystudiopro-frontend/mystudiopro-frontend-prod/g' Chart.yaml
#   - helm package --version ${CHART_VERSION} .
#   - helm repo update
#   - helm cm-push mystudiopro-frontend-prod-${CHART_VERSION}.tgz ${CI_PROJECT_NAME}


# deploy:
#   stage: deploy
#   rules:
#     - if: $CI_COMMIT_TAG =~ /prod.*/
#   environment: "prod"
#   image:
#     name: google/cloud-sdk
#     entrypoint: ['']
#   before_script:
#     - curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | tee /usr/share/keyrings/helm.gpg > /dev/null
#     - apt-get install apt-transport-https --yes
#     - echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | tee /etc/apt/sources.list.d/helm-stable-debian.list
#     - apt-get update
#     - apt-get install helm
#     - helm repo add --username ${HELM_USER} --password ${HELM_ACCESS_TOKEN} ${CI_PROJECT_NAME} https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/packages/helm/stable
#   script:
#     - echo $GCP_SERVICE_ACCOUNT_KEY_PROD > key.json
#     - echo $GCP_SERVICE_ACCOUNT_PROD
#     - gcloud auth activate-service-account --key-file key.json
#     - gcloud container clusters get-credentials msp-prod-cluster	--zone us-central1-c --project mystudiopro
#     - export NAMESPACE=msp-frontend-prod
#     - cd HelmCharts 
#     - helm repo update 
#     - helm upgrade --install mystudiopro-frontend-prod front-end/mystudiopro-frontend-prod --history-max=2 -f environments/prod.values.yaml --namespace ${NAMESPACE}
